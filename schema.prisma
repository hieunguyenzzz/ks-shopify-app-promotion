// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
}

model Store {
  id                  String     @id @default(cuid())
  name                String     @unique @default("")
  from_Campaign_store Campaign[] @relation("Campaign_store")
  from_Product_store  Product[]  @relation("Product_store")
}

model Campaign {
  id                         String         @id @default(cuid())
  title                      String         @default("")
  status                     Int?
  active_from_date           DateTime?
  active_to_date             DateTime?
  priority                   Int?
  store                      Store?         @relation("Campaign_store", fields: [storeId], references: [id])
  storeId                    String?        @map("store")
  from_CampaignItem_campaign CampaignItem[] @relation("CampaignItem_campaign")

  @@index([storeId])
}

model CampaignItem {
  id         String    @id @default(cuid())
  product    Product?  @relation("CampaignItem_product", fields: [productId], references: [id])
  productId  String?   @map("product")
  campaign   Campaign? @relation("CampaignItem_campaign", fields: [campaignId], references: [id])
  campaignId String?   @map("campaign")
  price      Decimal?  @postgresql.Decimal(18, 4)

  @@index([productId])
  @@index([campaignId])
}

model Product {
  id                        String         @id @default(cuid())
  name                      String         @default("")
  sku                       String         @default("")
  compareAtPrice            Decimal?       @postgresql.Decimal(18, 4)
  shopifyId                 String         @unique @default("")
  store                     Store?         @relation("Product_store", fields: [storeId], references: [id])
  storeId                   String?        @map("store")
  from_CampaignItem_product CampaignItem[] @relation("CampaignItem_product")

  @@index([storeId])
}